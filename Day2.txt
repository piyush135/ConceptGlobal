1-1 relationship -> Embedded 
	db.emp.insert({_id:10, ename: "Vaishali", salary:2000, addr:{ line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"}});
	
	db.emp.insert({_id:20, ename: "Simran", salary:3000, addr:{ line1:"rtp",line2: "KPalli",city: "Hyd", state: "AP"}});

	db.emp.insert({_id:30, ename: "Saloni", salary:4000, addr:{ line1:"hitech",line2:
 "hinjewadi",city: "Pune", state: "MH"}});
 
 
	db.emp.find({"addr.state":"MH"}) 
 
1-1 relationship -> Ref / Normalized
	db.emp.insert({"_id":10, ename: "Vaishali", salary:2000});
	db.emp.insert({"_id":20, ename: "Simran", salary:3000 });
	db.emp.insert({"_id":30, ename: "Saloni", salary:4000 }); 
Manual References
	db.addr1.insert({"empno": 10, line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"});
	db.addr1.insert({"empno":20, line1:"rtp",line2: "KPalli",city: "Hyd", state: "AP"});
    db.addr1.insert({"empno":30,  line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"});

	db.emp.aggregate([{$lookup: {from: "addr1",localField: "_id", foreignField:"empno", as: "addr"}}])


Automatic References	($ref)
		db.addr1.insert({"empno": {"$ref":"emp","$id": 10,"$db":"mydb"}, line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"})
		db.addr1.insert({"empno": {"$ref":"emp1","$id": 20,"$db":"mydb"}, line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"})
		db.addr1.insert({"empno": {"$ref":"emp","$id": 3`0 , "$db":"mydb"}, line1:"hitech",line2: "hinjewadi",city: "Pune", state: "MH"})
		
		
		db.emp.aggregate([{$lookup: {from: "addr1",localField: "_id",foreignField:"empno", as: "addresss"}}])
	
	
Lab - Profiling and Tooling
start mongo server
start mongod --dbpath c:\cglobal\change --directoryperdb --wiredTigerDirectoryForIndexes --profile 2  






import data

mongoimport --db mydb1 --collection people --file=people.json

Indexing 
for ( var i = 1; i<= 1000;i++){
			var v = {}
			if ((i % 2) ==0)
			v  = 	{'deptno': i ,'dname': 'dnameof'+ i, 'loc':'Hyd'};
			else
			v  = 	{'deptno': i ,'dname': 'dnameof'+ i, 'loc':'Blr'};
			db.dept.insert(v);
	}
	
	


db.dept.find({"loc":"Hyd"}).explain("executionStats")
------> show query time 
		-> enable profile
			db.setProfilingLevel(2, { slowms: 5 })
		-> check the total time of execution
------> Create index
	db.dept.createIndex({"loc":1})
	
------>db.dept.find({"loc":"Blr"}).explain("executionStats")
compare performance of these two queries

----------------------
Aggregation
db.depts.insert(
	{deptno:10,dname:'Trn',loc:'Pnq'
	});
db.depts.insert(
	{deptno:20,dname:'Trn',loc:'Pnq', 
	emps:[
		{empno:1, ename:'Simarn', salary:100, project:'Proj1',
		    address:{ line1:'station11',city:'Pune',state:'MH'}}
		]
	});
db.depts.insert(
	{deptno:30,dname:'Trn',loc:'Pnq', 
	emps:[
		{empno:2, ename:'Saloni', salary:200, project:'Proj2',
		    address:{ line1:'station',city:'Pune',state:'MH'}},
		{empno:3, ename:'Kalyani', salary:300, project:'Proj1',
			address:{ line1:'Kappli',city:'Hyd',state:'AP'}}
		]
	});
			


1. Query
	deptno , dname, loc
	 db.depts.find({},{"emps":0})
2. all employee info where deptno = 10
		db.depts.find({"deptno":10},{"emps":0})
3. show city, count of employee per department
	
	db.depts.aggregate([
   { $match:  {"deptno" : 20} },
   { $group: { _id: "$emps.address.city", total: { $sum:1 } } }])
   
   
db.dept11.insert({"_id":10,dname:'Trn',loc:'Pnq'});
db.dept11.insert({"_id":20,dname:'Trn',loc:'Pnq'});
db.dept11.insert({"_id":30,dname:'Trn',loc:'Pnq'});

db.emp11.insert({empno:1, ename:'Simarn', salary:100, project:'Proj1',
		"deptno": {$ref:"dept11", $id: "20", $db:"embedd"}});

db.emp11.insert({empno:2, ename:'Saloni', salary:200, project:'Proj2',
		"deptno": {$ref:"dept11", $id: "30", $db:"embedd"}});
db.emp11.insert({empno:3, ename:'Kalyani', salary:300, project:'Proj1',
		"deptno": {$ref:"dept11", $id: "30", $db:"embedd"}});




